<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="icon" type="image/png" href="/images/logo.png">
    <title>Ride booking</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.2/dist/leaflet.css"
        integrity="sha256-sA+zWATbFveLLNqWO2gtiw3HL/lh1giY/Inf1BJ0z14=" crossorigin="" />
    <style>
        body {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: sans-serif;
            background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
        }

        .container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin-block: 120px;
            margin-inline: 30px;
        }

        form {
            display: flex;
            flex-direction: column;
            row-gap: 1rem;
            align-items: center;
        }

        form>input {
            max-width: 600px;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
        }

        form>input[type="submit"] {
            background-color: #007bff;
            color: white;
            letter-spacing: 0.15rem;
        }

        form>input[type="submit"]:hover {
            background-color: #3d9bff;
        }

        .card {
            width: 80%;
            max-width: 500px;
            background-color: transparent;
            border: 1px solid #ccc;
            border-radius: 10px;
            padding: 30px;
            margin-bottom: 20px;
        }

        .card h1 {
            font-size: 30px;
            text-align: center;
            margin: 0;
            margin-bottom: 30px;
        }

        p {
            font-size: 18px;
            line-height: 1.5;
            margin: 0;
        }

        .card button {
            display: block;
            margin: 20px auto;
            padding: 10px 20px;
            font-size: 18px;
            border: none;
            border-radius: 5px;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
        }
        #location {
            color: #323030;
        }
        .card button:hover {
            background-color: #3d9bff;
        }

        #map {
            height: 350px;
            margin-top: 20px;
            border-radius: 10px;
        }

        @media screen and (max-width: 600px) {
            .container {
                margin-block: 60px;
            }

            .card {
                width: 90%;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="card">
            <h1>Book Your Ride</h1>
            <form action="/bookingstatus" method="POST">
                <label for="ridername">Rider Name:</label>
                <input type="text" id="ridername" name="ridername" required>

                <label for="currentLocation">Current Location:</label>
                <input type="text" id="currentLocation" name="currentLocation" required>

                <label for="destination">Destination:</label>
                <input type="text" id="destination" name="destination" required>

                <label for="passengerCount">No. of Passengers:</label>
                <input type="text" id="passengerCount" name="passengerCount" required>

                <input type="submit" value="Submit">
            </form>
            <div id="map"></div>
            <p id="location"></p>
            <p>Click the button to get your location:</p>
            <button onclick="getLocation()">Get My Location</button>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet@1.9.2/dist/leaflet.js"
        integrity="sha256-o9N1jGDZrf5tS+Ft4gbIK7mYMipq9lqpVJ91xHSyKhg=" crossorigin=""></script>
    <script>
        const map = L.map('map');
        // Initializes map bhilad location
        let defaulltLat = 20.293138945920983
        let defaulltLon = 72.87870996137642

        let defaultZoomLevel = 10

        map.setView([defaulltLat, defaulltLon], defaultZoomLevel);

        // Sets initial coordinates and zoom level
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: 'Â© <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        // Sets map data source and associates with map
        let marker, circle, zoomed;
        function success(pos) {
            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;
            const accuracy = pos.coords.accuracy;
            // Removes any existing marker and circule (new ones about to be set)
            if (marker) {
                map.removeLayer(marker);
                map.removeLayer(circle);
            }

            // Adds marker to the map and a circle for accuracy
            marker = L.marker([lat, lng]).addTo(map);
            circle = L.circle([lat, lng], { radius: accuracy }).addTo(map);

            // Set zoom to boundaries of accuracy circle
            if (!zoomed) {
                zoomed = map.fitBounds(circle.getBounds());
            }

            // Set map focus to current user position
            map.setView([lat, lng]);


            // Reverse geocoding to get address from latitude and longitude
            const url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lng}`;
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    // Print location details on the screen
                    const address = data.display_name;
                    const locationText = `Latitude: ${lat}, Longitude: ${lng}, Address: ${address}`;
                    document.getElementById("location").innerHTML = locationText;
                    console.log(data);
                })
                .catch(error => console.log(error));
        }

        function error(err) {
            if (err.code === 1) {
                alert("Please allow geolocation access");
            } else {
                alert("Cannot get current location");
            }
        }

        function getLocation() {
            navigator.geolocation.getCurrentPosition(success, error);
        }

    </script>
</body>

</html>